
==replay::couple Reference==

{{{
#include couple.hpp
}}}
A homogenous binary tuple type. 
====array====
{{{
  T replay::couple< T >::array[2][2]
}}}
  
====couple====
{{{
  replay::couple< T >::couple()
}}}
  Empty constructor. Leave the elements default-initialized. 
====couple====
{{{
  replay::couple< T >::couple(const T &a, const T &b)
}}}
  Constructor. afirst value. bsecond value. replay::make_couple 
====get0====
{{{
  const T& replay::couple< T >::get0() const 
}}}
  Get the first element. 
====get0====
{{{
  T& replay::couple< T >::get0()
}}}
  Get the first element. 
====get1====
{{{
  T& replay::couple< T >::get1()
}}}
  Get the second element. 
====get1====
{{{
  const T& replay::couple< T >::get1() const 
}}}
  Get the second element. 
====operator!=====
{{{
  bool replay::couple< T >::operator!=(const couple< T > &other) const 
}}}
  Inequantity. 
====operator======
{{{
  bool replay::couple< T >::operator==(const couple< T > &other) const 
}}}
  Equantity. 
====operator[]====
{{{
  const T& replay::couple< T >::operator[](const unsigned int i) const 
}}}
  Get an element from a couple. 
====operator[]====
{{{
  T& replay::couple< T >::operator[](const unsigned int i)
}}}
  Get an element from the couple. 
====ptr====
{{{
  T* replay::couple< T >::ptr()
}}}
  Get a pointer to the array. 
====ptr====
{{{
  const T* replay::couple< T >::ptr() const 
}}}
  Get a pointer to the array. 
====set====
{{{
  couple< T >& replay::couple< T >::set(const T &a, const T &b)
}}}
  Updates the values in the couple. athe first value. bthe seconf value. 
====swap====
{{{
  couple< T >& replay::couple< T >::swap()
}}}
  Swap the values in the couple. 