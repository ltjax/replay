
==replay::line_interval3 Reference==

{{{
#include lines3.hpp
}}}
Linear Component with a variable interval. This is a logical line, ray or segment, depending on whether the interval is unbounded. Althought this class is a little heavier than line, ray and segment, this is a lot better for clipping. 
====interval====
{{{
  fcouple replay::line_interval3::interval
}}}
  begin -> end 
====line_interval3====
{{{
  replay::line_interval3::line_interval3()
}}}
  Create a unbounded line interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const line3 &x)
}}}
  Cast a line to an unbounded line interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const ray3 &x)
}}}
  Cast a ray to a half bounded line interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const linear_component3 &x, const fcouple &interval)
}}}
  Create a line interval from a linear component and a parameter interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const segment3 &x)
}}}
  Cast a segment to a bounded line interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const linear_component3 &x, const float min, const float max)
}}}
  Create a line interval from a linear component and a parameter interval. 
====line_interval3====
{{{
  replay::line_interval3::line_interval3(const vector3f &origin, const vector3f &direction, const float min=-std::numeric_limits< float >::max(), const float max=std::numeric_limits< float >::max())
}}}
  Create a line interval from origin, direction and optional interval parameters. 
====get_max_point====
{{{
  vector3f replay::line_interval3::get_max_point() const 
}}}
  Get the point on the upper interval border. 
====get_min_point====
{{{
  vector3f replay::line_interval3::get_min_point() const 
}}}
  Get the point on the lower interval border. 
====set====
{{{
  void replay::line_interval3::set(const linear_component3 &x, const float min, const float max)
}}}
  Set from a linear component and an interval. 
====set====
{{{
  void replay::line_interval3::set(const linear_component3 &x, const fcouple &interval)
}}}
  Set from a linear component and an interval. 
====set_line====
{{{
  void replay::line_interval3::set_line(const line3 &x)
}}}
  Cast a line to an unbounded line interval. 
====set_ray====
{{{
  void replay::line_interval3::set_ray(const ray3 &x)
}}}
  Cast a ray to a half bounded line interval. 
====set_segment====
{{{
  void replay::line_interval3::set_segment(const segment3 &x)
}}}
  Cast a segment to a bounded line interval. 